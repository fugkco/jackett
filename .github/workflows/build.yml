name: ci

on:
#  push:
#    branches:
#      - "main"
  release:
    types: [created]

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - id: build_data
        shell: bash
        run: |
          set -x
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          
          tags=()
          latest_version=""
          if [[ "${{ github.event_name == 'release' && github.event.action == 'created' }}" == "true" ]]; then
            tags=("latest" "$latest_version")
            latest_version="$GITHUB_REF_NAME"
          else
            tags=("$(git rev-parse --short HEAD)")
            latest_version="$(curl -fsSL "https://api.github.com/repos/jackett/jackett/releases/latest" | jq -r .tag_name)"
          fi

          echo "jacket_version=$latest_version" >> "$GITHUB_OUTPUT"
          echo "tags<<$EOF" >> $GITHUB_OUTPUT
          printf 'ghcr.io/${{ github.repository_owner }}/jackett:%s\n' "${tags[@]}" >> $GITHUB_OUTPUT
          echo "$EOF" >> $GITHUB_OUTPUT
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          platforms: linux/amd64,linux/arm,linux/arm64
          push: ${{ github.event_name == 'release' && github.event.action == 'created' }}
          build-args: |
            JACKETT_VERSION=${{ steps.build_data.outputs.jacket_version }}
          tags: ${{ steps.build_data.outputs.tags }}
